<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.lolico.desensitize.mybatis.SensitiveDao">
    <resultMap id="BaseResultMap" type="me.lolico.desensitize.mybatis.Sensitive">
        <result column="database_name" property="databaseName" jdbcType="VARCHAR"/>
        <result column="table_name" property="tableName" jdbcType="VARCHAR"/>
        <result column="hive_table" property="hiveTable" jdbcType="INTEGER"/>
        <result column="sensitive_field" property="sensitiveField" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        database_name
        , table_name, hive_table, sensitive_field
    </sql>

    <select id="selectBySensitive" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from test_sensitives
        <where>
            <if test="param.databaseName != null">
                and database_name = #{param.databaseName,jdbcType=VARCHAR}
            </if>
            <if test="param.tableName != null">
                and table_name = #{param.tableName,jdbcType=VARCHAR}
            </if>
            <if test="param.hiveTable != null">
                and hive_table = #{param.hiveTable,jdbcType=VARCHAR}
            </if>
            <if test="param.sensitiveField != null">
                and sensitive_field = #{param.sensitiveField,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <select id="selectByHiveTableLike" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from test_sensitives
        where
        hive_table like #{param,jdbcType=VARCHAR}
    </select>
    <update id="updateHiveTable">
        update test_sensitives
        set hive_table = #{hiveTable,jdbcType=VARCHAR}
        where hive_table like #{query,jdbcType=VARCHAR}
    </update>
    <update id="updateSensitiveField">
        <foreach collection="list1" item="item1" separator=";">
            update test_sensitives
            set sensitive_field = #{param1} where sensitive_field = #{item1}
        </foreach>
    </update>
    <insert id="addSensitive">
        insert into test_sensitives
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="databaseName != null">database_name,</if>
            <if test="tableName != null">table_name,</if>
            <if test="hiveTable != null">hive_table,</if>
            <if test="sensitiveField != null">sensitive_field,</if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="databaseName != null">#{databaseName,jdbcType=VARCHAR},</if>
            <if test="tableName != null">#{tableName,jdbcType=VARCHAR},</if>
            <if test="hiveTable != null">#{hiveTable,jdbcType=VARCHAR},</if>
            <if test="sensitiveField != null">#{sensitiveField,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <insert id="insertBatch">
        insert into test_sensitives(database_name,table_name,hive_table,
        sensitive_field)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.databaseName,jdbcType=VARCHAR},#{item.tableName,jdbcType=VARCHAR},#{item.hiveTable,jdbcType=VARCHAR},
            #{item.sensitiveField,jdbcType=VARCHAR})
        </foreach>
    </insert>
</mapper>
